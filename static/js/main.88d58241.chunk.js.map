{"version":3,"sources":["Console/Handlers.ts","Console/ConsoleColors.tsx","Console/ConsoleCommandHandler.ts","Console/Console.tsx","Window/Window.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["name","blue","br","color","value","HelpHandler","a","LsHandler","CdHandler","startsWith","AboutHandler","getAge","Date","now","getTime","toFixed","EducationHandler","SkillsHandler","handlers","setTimeout","window","open","HandleConsoleInput","handler","result","ConsoleRow","props","style","display","flexDirection","flexWrap","children","ConsoleSpan","ConsoleInput","onBlur","e","target","focus","onKeyDown","keyCode","onSubmitted","currentTarget","autoFocus","backgroundColor","fontFamily","border","outline","caretColor","flex","fontSize","padding","spellCheck","Console","state","lines","showInput","this","setState","user","initialPage","renderElements","line","push","map","item","v","paddingTop","paddingLeft","paddingRight","paddingBottom","React","Component","Button","width","height","borderRadius","cursor","Window","boxShadow","borderTopLeftRadius","borderTopRightRadius","boxSizing","alignItems","title","overflowY","className","App","overflow","position","right","bottom","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88d58241.chunk.js","sourcesContent":["import { ICommandHandler } from './ConsoleCommandHandler';\r\nimport { white, secondary, nbsp, tetriary, green, blue, blueDown } from './ConsoleColors';\r\n\r\nconst br =\r\n  [\r\n    { color: secondary, value: ` ` }\r\n  ];\r\n\r\nconst XHandler: ICommandHandler = async (value) => {\r\n  if (value !== `help`) return null;\r\n\r\n  return [\r\n    [\r\n      { value: `X`, color: `X` }\r\n    ]\r\n  ]\r\n}\r\n\r\nconst GenerateNotAllowedHandler: (name: string) => ICommandHandler = (name) => {\r\n  return async (value: string) => {\r\n    if (!value.startsWith(name)) return null;\r\n\r\n    return [\r\n      [\r\n        { color: secondary, value: 'You are not allowed to use this command. Contact the system administrator for more info.' },\r\n      ],\r\n    ]\r\n  }\r\n}\r\n\r\nexport const HelpHandler: ICommandHandler = async (value) => {\r\n  if (value !== 'help') return null;\r\n\r\n  return [\r\n    [\r\n      { color: tetriary, value: `List of allowed commands:` }\r\n    ],\r\n    [\r\n      { color: secondary, value: `${nbsp}ls` }\r\n    ],\r\n    [\r\n      { color: secondary, value: `${nbsp}contact` }\r\n    ],\r\n  ]\r\n}\r\n\r\nexport const LsHandler: ICommandHandler = async (value) => {\r\n  if (value !== 'ls') return null;\r\n\r\n  return [\r\n    [\r\n      { color: tetriary, value: `.` },\r\n      { color: tetriary, value: `${nbsp}..` },\r\n      { color: secondary, value: `${nbsp}about` },\r\n      { color: secondary, value: `${nbsp}education` },\r\n      { color: secondary, value: `${nbsp}github` },\r\n      { color: secondary, value: `${nbsp}skills` },\r\n    ],\r\n  ]\r\n}\r\n\r\nexport const CdHandler = GenerateNotAllowedHandler('cd')\r\n\r\nexport const AboutHandler: ICommandHandler = async (value) => {\r\n  if (value !== './about' && value !== 'about') return null;\r\n  const getAge = (): string => {\r\n    const years = (Date.now() - new Date(2002, 11, 7).getTime()) / (365 * 24 * 60 * 60 * 1000)\r\n    return years.toFixed(1)\r\n  }\r\n\r\n  return [\r\n    [\r\n      { color: white, value: `Hi! I am Erzhan. I am a passionate ${getAge()} year old full-stack developer.` }\r\n    ],\r\n  ]\r\n}\r\n\r\nexport const EducationHandler: ICommandHandler = async (value) => {\r\n  if (value !== './education' && value !== 'education') return null;\r\n\r\n  return [\r\n    [\r\n      { color: tetriary, value: `2009-2014${nbsp}` },\r\n      { color: secondary, value: `Local school (Y1 - Y6)` }\r\n    ],\r\n    br,\r\n    [\r\n      { color: tetriary, value: `2014-2019${nbsp}` },\r\n      { color: secondary, value: `Nazarbayev Intellectual School PhMD in Almaty (Y7 - Y11)` }\r\n    ],\r\n    [\r\n      { color: tetriary, value: `${nbsp}Maths, Computer Science and Physics` }\r\n    ],\r\n    br,\r\n    [\r\n      { color: tetriary, value: `2019-2021${nbsp}` },\r\n      { color: secondary, value: `Haileybury Almaty (Y12 - Y13)` }\r\n    ],\r\n    [\r\n      { color: tetriary, value: `${nbsp}Maths, Computer Science and Further Maths` }\r\n    ],\r\n  ]\r\n}\r\n\r\nexport const SkillsHandler: ICommandHandler = async (value) => {\r\n  if (value !== './skills' && value !== 'skills') return null;\r\n\r\n  return [\r\n    [\r\n      { color: secondary, value: `JavaScript and TypeScript:${nbsp}` },\r\n      { color: green, value: `Advanced` },\r\n    ],\r\n    br,\r\n    [\r\n      { color: secondary, value: `Node.js:${nbsp}` },\r\n      { color: green, value: `Advanced` },\r\n    ],\r\n    br,\r\n    [\r\n      { color: secondary, value: `Flutter and Dart:${nbsp}` },\r\n      { color: green, value: `Advanced` },\r\n    ],\r\n    br,\r\n    [\r\n      { color: secondary, value: `Stencil.js:${nbsp}` },\r\n      { color: blue, value: `Proficient` },\r\n    ],\r\n    br,\r\n    [\r\n      { color: secondary, value: `C#:${nbsp}` },\r\n      { color: blue, value: `Proficient` },\r\n    ],\r\n    br,\r\n    [\r\n      { color: secondary, value: `C++, C:${nbsp}` },\r\n      { color: blue, value: `Proficient` },\r\n    ],\r\n    br,\r\n    [\r\n      { color: secondary, value: `Computer engineering:${nbsp}` },\r\n      { color: blue, value: `Proficient` },\r\n    ],\r\n    br,\r\n    [\r\n      { color: secondary, value: `Mechatronics:${nbsp}` },\r\n      { color: blue, value: `Proficient` },\r\n    ],\r\n    br,\r\n    [\r\n      { color: secondary, value: `React.js:${nbsp}` },\r\n      { color: blueDown, value: `Beginner` },\r\n    ],\r\n    br,\r\n    [\r\n      { color: tetriary, value: `Some soft skills too :P` },\r\n    ],\r\n  ]\r\n}\r\n\r\nexport const GithubHandler: ICommandHandler = async (value) => {\r\n  if (value !== './github' && value !== 'github') return null;\r\n\r\n  setTimeout(() => {\r\n    window.open('https://github.com/kekland/')\r\n  }, 2000)\r\n\r\n  return [\r\n    [\r\n      { color: secondary, value: `Opening the github page in a second...` }\r\n    ],\r\n  ]\r\n}\r\n\r\nexport const ContactHandler: ICommandHandler = async (value) => {\r\n  if (value !== 'contact') return null;\r\n\r\n  return [\r\n    [\r\n      { color: secondary, value: `Contact me:${nbsp}` },\r\n      { color: green, value: `kk.erzhan@gmail.com (Erzhan Kabdykairov)` },\r\n    ],\r\n  ]\r\n}","export const tetriary = '#444'\r\nexport const secondary = '#666'\r\nexport const white = '#fff'\r\nexport const green = '#009900'\r\nexport const blue = '#000099'\r\nexport const blueDown = '#000066'\r\nexport const nbsp = '\\u00a0'","import { tetriary, secondary, white, nbsp } from './ConsoleColors';\r\nimport { HelpHandler, LsHandler, CdHandler, AboutHandler, EducationHandler, GithubHandler, SkillsHandler, ContactHandler } from './Handlers';\r\n\r\nexport type ICommandHandler = (value: string) => Promise<IConsoleLine[] | null>;\r\n\r\nexport interface IConsoleString {\r\n  color: string;\r\n  value: string;\r\n}\r\n\r\nexport type IConsoleLine = IConsoleString[];\r\n\r\nconst handlers: ICommandHandler[] = [\r\n  HelpHandler,\r\n  LsHandler,\r\n  CdHandler,\r\n  AboutHandler,\r\n  EducationHandler,\r\n  GithubHandler,\r\n  SkillsHandler,\r\n  ContactHandler,\r\n]\r\n\r\nexport const HandleConsoleInput: ICommandHandler = async (value) => {\r\n  for (const handler of handlers) {\r\n    const result = await handler(value)\r\n    if(result != null) {\r\n      return result;\r\n    }\r\n    continue;\r\n  }\r\n\r\n  return [\r\n    [{ value: 'Command not found.', color: tetriary }],\r\n    [{ value: 'Try', color: tetriary }, { value: `${nbsp}help${nbsp}`, color: secondary }, { value: 'to get more information', color: tetriary }],\r\n  ]\r\n} ","import React, { useState } from 'react'\r\nimport { HandleConsoleInput, IConsoleLine } from './ConsoleCommandHandler';\r\nimport { secondary, tetriary } from './ConsoleColors';\r\n\r\nconst ConsoleRow: React.FC = (props) => {\r\n  return (\r\n    <p style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n      {props.children}\r\n    </p>\r\n  );\r\n}\r\n\r\nconst ConsoleSpan: React.FC<{ color: string }> = (props) => {\r\n  return (\r\n    <span style={{ color: props.color }}>\r\n      {props.children}\r\n    </span>\r\n  );\r\n}\r\n\r\nconst BlinkingCaret: React.FC = (props) => {\r\n  const [state, setState] = useState(true)\r\n  setTimeout(() => {\r\n    setState(!state)\r\n  }, 1000)\r\n  return (\r\n    <div style={{ display: state ? 'inline-block' : 'none', color: secondary }}>\r\n      &nbsp;_\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ConsoleInputProps {\r\n  onSubmitted: (val: string) => void;\r\n}\r\n\r\nconst ConsoleInput: React.FC<ConsoleInputProps> = (props) => {\r\n  const onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.keyCode === 13) {\r\n      props.onSubmitted(e.currentTarget.value)\r\n      e.currentTarget.value = ''\r\n    }\r\n  }\r\n  return (\r\n    <input onBlur={(e) => e.target.focus()} onKeyDown={onKeyDown} autoFocus={true} style={{\r\n      backgroundColor: 'transparent',\r\n      color: '#fff',\r\n      fontFamily: 'Consolas',\r\n      border: 0,\r\n      outline: 0,\r\n      caretColor: secondary,\r\n      flex: 1,\r\n      fontSize: 16,\r\n      padding: 0,\r\n    }} spellCheck={false} />\r\n  );\r\n}\r\n\r\ninterface IConsoleProps {\r\n  user: string;\r\n  initialPage: string;\r\n}\r\n\r\ninterface IConsoleState {\r\n  showInput: boolean;\r\n  lines: IConsoleLine[];\r\n}\r\n\r\nexport class Console extends React.Component<IConsoleProps, IConsoleState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      lines: [],\r\n      showInput: true,\r\n    }\r\n  }\r\n\r\n  async onSubmitted(value: string) {\r\n    this.setState({ showInput: false })\r\n\r\n    const result = await HandleConsoleInput(value)\r\n    if (result == null) {\r\n      this.setState({ showInput: true })\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      lines: [\r\n        ...this.state.lines,\r\n        [\r\n          { color: tetriary, value: `${this.props.user}@kekland.github.io:${this.props.initialPage}$\\u00A0` },\r\n          { color: 'white', value },\r\n        ],\r\n        ...result,\r\n      ],\r\n      showInput: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const renderElements: React.ReactNode[] = []\r\n\r\n    for (const line of this.state.lines) {\r\n      renderElements.push(\r\n        <ConsoleRow>\r\n          {\r\n            line.map((item) => <ConsoleSpan color={item.color}>{item.value}</ConsoleSpan>)\r\n          }\r\n        </ConsoleRow>\r\n      )\r\n    }\r\n\r\n    if (this.state.showInput) {\r\n      renderElements.push(\r\n        <ConsoleRow>\r\n          <ConsoleSpan color={tetriary}>\r\n            {this.props.user}@kekland.github.io:{this.props.initialPage}$\r\n          </ConsoleSpan>\r\n          &nbsp;\r\n          <ConsoleInput onSubmitted={(v) => this.onSubmitted(v)} />\r\n        </ConsoleRow>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div style={{\r\n        fontFamily: 'Consolas',\r\n        color: '#fff',\r\n        paddingTop: 0,\r\n        paddingLeft: 32,\r\n        paddingRight: 32,\r\n        paddingBottom: 16,\r\n      }}\r\n      >\r\n        {renderElements}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport { secondary } from '../Console/ConsoleColors';\r\n\r\ninterface IWindowProps {\r\n  width: string;\r\n  height: string;\r\n  title: string;\r\n}\r\n\r\ninterface IButtonProps {\r\n  color: string;\r\n}\r\n\r\nconst Button: React.FC<IButtonProps> = (props) => {\r\n  return <div style={{ width: 16, height: 16, borderRadius: 8, backgroundColor: props.color, cursor: 'no-drop' }} />\r\n}\r\n\r\nexport const Window: React.FC<IWindowProps> = (props) => {\r\n  return (\r\n    <div style={{\r\n      width: props.width,\r\n      height: props.height,\r\n      borderRadius: 16,\r\n      backgroundColor: '#000',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      boxShadow: '0 6px 12px rgba(0, 0, 0, 0.15)'\r\n    }}>\r\n      <div style={{\r\n        width: props.width,\r\n        height: 64,\r\n        borderTopLeftRadius: 16,\r\n        borderTopRightRadius: 16,\r\n        display: 'flex',\r\n        paddingLeft: 32,\r\n        paddingRight: 32,\r\n        boxSizing: 'border-box',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n      }}>\r\n        <span style={{\r\n          color: secondary,\r\n          fontFamily: 'Consolas',\r\n        }}>\r\n          {props.title}\r\n        </span>\r\n        <div style={{ flex: 1 }} />\r\n        <Button color='#222' />\r\n        <div style={{ width: 8 }} />\r\n        <Button color='#222' />\r\n        <div style={{ width: 8 }} />\r\n        <Button color='#222' />\r\n      </div>\r\n      <div style={{ overflowY: 'scroll', flex: 1 }} className='scrollbar'>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport { Console } from './Console/Console'\nimport { Window } from './Window/Window'\nimport { secondary, tetriary } from './Console/ConsoleColors';\n\nconst App: React.FC = () => {\n  return (\n    <div style={{ width: '100vw', height: '100vh', backgroundColor: '#111', padding: '10vh 10vw', boxSizing: 'border-box', overflow: 'hidden' }}>\n      <Window width='80vw' height='80vh' title='Terminal'>\n        <Console user='guest' initialPage='~' />\n      </Window>\n      <div style={{ position: 'absolute', right: 16, bottom: 16, color: tetriary }}>\n        Created with ❤️ by&nbsp;\n        <a href='https://github.com/kekland/' target='_blank' style={{ color: secondary }}>\n          kekland\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}